package za.co.wethinkcode.ServerClient.database.dao;

import net.lemnik.eodsql.AutoGeneratedKeys;
import net.lemnik.eodsql.ResultColumn;
import org.json.JSONObject;

import java.util.HashMap;
import java.util.Map;

public class WorldDAO {

    @AutoGeneratedKeys
    @ResultColumn(value = "id")
    private int id;

    @ResultColumn(value = "name")
    private String name;

    @ResultColumn(value = "size")
    private int size;

    @ResultColumn(value = "attributes")
    private String attributes;

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public void setName( String name ) {
        this.name = name;
    }

    public int getSize() {
        return size;
    }

    public void setSize ( int size ) {
        this.size = size;
    }

    public HashMap<String, Integer> getAttributes() {
        HashMap<String, Integer> _attributes = new HashMap<>();
        JSONObject jsonObject = new JSONObject(this.attributes);

        _attributes.put("mine", jsonObject.getInt("mine"));
        _attributes.put("repair", jsonObject.getInt("repair"));
        _attributes.put("reload", jsonObject.getInt("reload"));
        _attributes.put("visibility", jsonObject.getInt("visibility"));
        _attributes.put("topLeftY", jsonObject.getInt("topLeftY"));
        _attributes.put("bottomRightX", jsonObject.getInt("bottomRightX"));
        _attributes.put("topLeftX", jsonObject.getInt("topLeftX"));
        _attributes.put("bottomRightY", jsonObject.getInt("bottomRightY"));

        return _attributes;
    }

    public void setAttributes(JSONObject attributes) {
        this.attributes = attributes.toString();
    }

    public static WorldDAO create(String name, int size) {
        WorldDAO world = new WorldDAO();
        world.setName(name);
        world.setSize(size);
        return world;
    }
}
